{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","role","htmlFor","defaultProps","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","toUpperCase","showAlert","toLowerCase","content","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","arr","words","lower","push","charAt","slice","length","Alert","alert","word","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea7ccdf9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link active\" to=\"/about\">{props.about}</Link> */}\r\n                                <a className=\"nav-link active\" href=\"#\">{props.about}</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n\r\n                        <div className={`form-check form-switch text-${props.mode ===\"light\"? \"dark\":\"light\"}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Title text Here\",\r\n    about: \"about here\"\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    function handleOnChange(event){\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)  // setting text\r\n    }\r\n    \r\n    function handleOnUpClick(){\r\n        // console.log(\"UpperCase Button was Clicked \" + text);\r\n        setText(text.toUpperCase())  //using text from handleOnChange function and converting to uppercase.Note text iscoming from above function\r\n        props.showAlert(\"success\", \"Text is Converted to UpperCase\")\r\n    }\r\n    function handleOnLowClick(){\r\n        // console.log(\"LowerCase Button was Clicked \" + text);\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"success\", \"Text is Converted to LowerCase\")\r\n\r\n    }\r\n    function handleOnClearClick(){\r\n        setText(\"\")\r\n        props.showAlert(\"success\", \"Text Cleared\")\r\n    }\r\n    function handleCopy(){\r\n        let content = document.getElementById(\"mybox\");\r\n        content.select();\r\n        navigator.clipboard.writeText(content.value);\r\n        props.showAlert(\"success\", \"Copied to Clipboard\")\r\n\r\n    }\r\n    function handleExtraSpaces(){\r\n        let newText = text.split(/[\" \"]+/); // Split Text Sentences by one/more Spaces. => returns ARRAY\r\n        setText(newText.join(\" \"));  // join array items by spaces and returns a string.\r\n        props.showAlert(\"success\", \"Extra Spaces are Removed\")\r\n    }\r\n    function handleCapitalize(){\r\n        let arr = [];\r\n        let words = text.split(\" \");\r\n        for(let word of words){ \r\n            let lower = word.toLowerCase();\r\n            arr.push(lower.charAt(0).toUpperCase() + lower.slice(1));\r\n        }\r\n        setText(arr.join(\" \"))\r\n        props.showAlert(\"success\", \"Words Capitalize\")\r\n    }\r\n        \r\n    const [text, setText] = useState(\"\")  // Default value is blank text (no text)\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <div className=\"mb-3\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n                <h2>{props.heading}</h2>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === \"light\"?\"white\":\"black\",color: props.mode === \"light\"?\"black\":\"white\"}} id=\"mybox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleOnUpClick} >Convert to UpperCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleOnLowClick} >Convert to LowerCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleOnClearClick} >Clear Text</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy Text</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove ExtraSpaces</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleCapitalize} >Capitalize</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n            <h2> Text Summary</h2>\r\n            <p><b>{text.split(\" \").length} words and {text.length} characters.</b></p>\r\n            <p><b>{0.008 * text.split(\" \").length} Minutes to read.</b></p>\r\n            <p><b>{text.split(\".\").length - 1} Sentences.</b></p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    function capitalize(word){       // word = success\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);  // Success\r\n    }\r\n    return (\r\n\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  function showAlert(type, message) {\n    setAlert({\n      type: type,\n      msg: message\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  function toggleMode() {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#0d0d33\"\n      showAlert(\"success\", \"Dark mode has been enabled\")\n      document.title = \"Play-Text Dark-Mode\"\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"success\", \"Light mode has been enabled\")\n      document.title = \"Play-Text Light-Mode\"\n\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About mode={mode}/> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter Text to Analyze\" mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n      {/* <TextForm heading=\"Enter Text to Analyze\" mode={mode} showAlert={showAlert} /> */}\n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}